<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd">
    
    <!-- For mail settings and future properties files -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:mail.properties</value>
                <value>classpath:global.properties</value>
                <!--<value>file:///#{T(java.lang.System).getenv('APP_GLOBAL_PATH')}/global.properties</value>-->
            </list>
        </property>
    </bean>

    <!-- JNDI DataSource for J2EE environments -->
    <!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/appfuse"/>-->

    <!--bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="-1"/>
        <property name="maxWait" value="1000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="validationQuery" value="select 1 from dual;"/>
        <property name="testWhileIdle" value="true" />
    </bean-->


    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxTotal" value="${jdbc.maxTotal}"/>
        <property name="maxWaitMillis" value="1000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="validationQuery" value="/* ping */SELECT 1;"/>
        <property name="testWhileIdle" value="true" />
        <property name="connectionProperties" value="useUnicode=yes;character_set_server=utf8mb4;"/>
        <!--<property name="jmxName" value="com.ozonetel.occd:type=GenericObjectPool,name=mdbc" /> -->
        <!--<property name="connectionProperties" value="loadBalanceEnableJMX=true;loadBalanceConnectionGroup=galera_cluster01" />-->
    </bean>
    <bean id="dataSource2" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc2.url}"/>
        <property name="username" value="${jdbc2.username}"/>
        <property name="password" value="${jdbc2.password}"/>
        <!--        <property name="maxActive" value="100"/>
        <property name="maxWait" value="1000"/>-->
        <property name="maxTotal" value="${jdbc2.maxTotal}"/>
        <property name="minIdle" value="100"/>
        <property name="maxWaitMillis" value="1000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="validationQuery" value="/* ping */SELECT 1;"/>
        <property name="testWhileIdle" value="true" />
    </bean>
    <!-- <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="poolName" value="springHikariCP" />
        <property name="connectionTestQuery" value="SELECT 1" />
        <property name="dataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
        <property name="maximumPoolSize" value="50" />
        <property name="idleTimeout" value="3000" />
        <property name="minimumIdle" value="5"/>
        <property name="maxLifetime" value="60000" />
        <property name="dataSourceProperties">
            <props>
                <prop key="url">${jdbc.url}</prop>
                <prop key="user">${jdbc.username}</prop>
                <prop key="password">${jdbc.password}</prop>
            </props>
        </property>
    </bean>-->

    <!-- HikariCP configuration 
        <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
            <constructor-arg ref="hikariConfig" />
        </bean>
    -->
    

    
    
    <!-- bean to access resource bundles in service classes -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource" >
        <property name="basenames" >
            <list>
                <value>classpath:ApplicationResources</value>
                <value>classpath:Messages</value>
            </list>
        </property>
    </bean>
    

    <bean id="appProperty" class="com.ozonetel.occ.model.AppProperty">
        <property name="kooKooOutBoundUrl" value="${kooKooOutBoundUrl}" />
        <property name="previewDialerUrl" value="${previewDialerUrl}" />
        <property name="kooKooCallBackUrl" value="${kooKooCallBackUrl}" />
        <property name="dialerUrl" value="${dialerUrl}" />
        <property name="adminPortalUrl" value="${adminPortalUrl}" />
        <property name="kookooTeleApiUrl" value="${kookooTeleApiUrl}" />
        <property name="manualDialCheckUrl" value="${manualDialCheckUrl}" />
        <property name="dialerApi" value="${api.dialer}" />
        <property name="dndCheckUrl" value="${url.dndCheck}" />
        <property name="pluginUrl" value="${url.pluginhandler}" />
        <property name="chatSftpHost" value="${host.chatSftp}" />
        <property name="chatSftpHostUsername" value="${chatSftpHost.username}" />
        <property name="chatSftpHostPassword" value="${chatSftpHost.password}" />
        <property name="chatSftpHostWorkingDir" value="${chatSftpHost.wokringDir}" />
        <property name="chatClientMsgSrvr" value="${url.chatClientMsgSrvr}" />
        <property name="ivrFeedbackUrl" value="${url.ivreFeedback}"/>
    </bean>
    
    <bean id="beanstalkClientFactory" class="com.dinstone.beanstalkc.BeanstalkClientFactory">
        <constructor-arg ref="beanstalkConfiguration" />
    </bean>
    
    <bean id="beanstalkConfiguration" class="com.dinstone.beanstalkc.Configuration">
        <property name="serviceHost" value="${beanstalk.host}" />
        <property name="servicePort" value="${beanstalk.port}" />
    </bean>
    
    <!--    <bean id="jedisPool" class="redis.clients.jedis.JedisSentinelPool">
        <constructor-arg index="0" value="${redis.master}" />
        <constructor-arg index="1">
            <set>
                <value>${redis.sentinel.1}</value>
                <value>${redis.sentinel.2}</value>
            </set> 
        </constructor-arg>
        <constructor-arg index="2" ref="jedisPoolConfig" />
    </bean>-->
 
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="300" />
    </bean>
    
    <bean id="jedisSentinelPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1" value="${host.jedis}" />
        <constructor-arg index="2" value="${jedis.port}" />
        <constructor-arg index="3" value="2000" />
        <constructor-arg index="4" value="${jedis.password}" />
        <constructor-arg index="5" value="${redis.db}" />
    </bean>
    
</beans>